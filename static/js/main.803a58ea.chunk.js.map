{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","class","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","backgroundColor","rows","value","onChange","event","target","disabled","length","newText","toUpperCase","showAlert","toLowerCase","split","join","filter","element","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","about","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.803a58ea.chunk.js","sourcesContent":["\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\n\nexport default function Navbar(props) {\n  return (\n    <nav\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\n    >\n      <div className=\"container-fluid\">\n        <a className=\"navbar-brand\" href=\"#\">\n          {props.title}\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item\">\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\n                Home\n              </a>\n            </li>\n            <li className=\"nav-item\">\n            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/about\">\n                {props.about}\n              </Link> */}\n            </li>\n          </ul>\n          <div class=\"form-check form-switch\">\n            <input\n              className=\"form-check-input\"\n              onClick={props.toggleMode}\n              type=\"checkbox\"\n              id=\"flexSwitchCheckDefault\"\n            />\n            <label\n              className={`form-check-label text-${props.mode==='light'?'dark':'light'}`}\n              htmlFor=\"flexSwitchCheckDefault\"\n            >\n              Dark mode\n            </label>\n          </div>\n          {/* <form className=\"d-flex\">\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n              <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n            </form> */}\n        </div>\n      </div>\n    </nav>\n  );\n}\n\n// Navbar.propTypes = {\n//     title: PropTypes.string.isRequired,\n//      about: PropTypes.string\n//     }\n\nNavbar.propTypes = {\n  title: PropTypes.string,\n  about: PropTypes.string,\n};\n\n// Navbar.defaultProps = {\n//     title: \"hello\",\n//     about: \"bye bye\"\n//     }\n\n","import React, {useState} from \"react\";\n\n\n\nexport default function TextForm(props) {\n\n    const handleUpClick = ()=>{\n        // console.log(\"uppercase was clicked\" + text)\n        let newText = text.toUpperCase();\n        setText(newText)\n        props.showAlert(\"converted to uppercase\", \"success\")\n    }\n\n    const handleDownClick = ()=>{\n        // console.log(\"uppercase was clicked\" + text)\n        let newText = text.toLowerCase();\n        setText(newText)\n        props.showAlert(\"converted to lowercase\", \"success\")\n    }\n\n    const handleOnChange = (event)=>{\n        // console.log(\"onchnage was clicked\")\n        setText(event.target.value)\n        \n    }\n\n    // const handleCopy = ()=>{\n    //     var text = document.getElementById('myBox');\n    //     text.Select();\n    //     navigator.clipboard.writeText(text.value);\n    // }\n\n    const handleExtraSpaces = ()=>{\n        let newText = text.split(/[ ]+/);\n        setText(newText.join(\" \"))\n        props.showAlert(\"Removed extra spaces\", \"success\")\n    }\n\n    // hook\n    const [text, setText] = useState(\" \");\n    // text  = \"new text\"    // wrong way to change the state\n    // setText(\"new text\");  // right way to change the state\n  return (\n      <>\n\n    <div className=\"container\"  style={{color: props.mode==='dark'?'white':'black'}}>\n        <h1>{props.heading}</h1>\n      <div className=\"mb-3\">\n        <textarea\n          className=\"form-control\"\n          style={{backgroundColor: props.mode==='dark'?'rgb(203 225 243)':'white'}}\n          id=\"myBox\"\n          rows=\"8\"\n          value={text}\n          onChange={handleOnChange}\n        ></textarea>\n      </div>\n      <button disabled={text.length===0} className=\"btn btn-primary mx-2 \" onClick={handleUpClick}>Convert to Uppercase</button>\n      <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleDownClick}>Convert to lowercase</button>\n      {/* <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy text</button> */}\n      <button  disabled={text.length===0} className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>Remove extra spaces</button>\n    </div>\n    <div className=\"container my-2\" style={{color: props.mode==='dark'?'white':'black'}}>\n        <h2>Your Text Summary</h2>\n        <p>{text.split(\" \").filter((element)=>{return element.length !==0}).length} words and ,{text.length} characters</p>\n        <p>{0.008 * text.split(\" \").length}  time to read</p>\n        <h2>Preview</h2>\n        <p>{text.length>0?text:'Enter something to preview'}</p>\n    </div>\n    </>\n  );\n}\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n\r\n\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    <div style={{height: '50px'}}>\r\n    {props.alert &&\r\n    <div\r\n    className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n    role=\"alert\"\r\n    >\r\n        {capitalize(props.alert.type)} : {props.alert.msg}\r\n        \r\n      </div>}\r\n        </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\n// import About from \"./components/About\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n\n// import { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"dark\") {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode enabled\", \"success\");\n    } else {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode enabled\", \"success\");\n    }\n  };\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar\n          title=\"Textutils\"\n          about=\"About us\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n        <Alert alert={alert} />\n        {/* <Navbar /> */}\n        <div className=\"container my-3\">\n          {/* <Switch> */}\n            {/* <Route exact path=\"/about\"> */}\n              {/* <About /> */}\n            {/* </Route> */}\n            {/* <Route exact path=\"/\"> */}\n              <TextForm\n                showAlert={showAlert}\n                heading=\"ENTER THE TEXT TO CHANGE !!\"\n                mode={mode}\n              />\n            {/* </Route> */}\n          {/* </Switch> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}